name: Windows 2025 RDP Setup

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2025

    steps:
      - name: Create user Matrix
        run: |
          net user Matrix Matrix#1234 /add
          net localgroup "Administrators" Matrix /add

      - name: Set Taskbar Left + Dark Theme Defaults
        run: |
          REG LOAD HKLM\Default C:\Users\Default\NTUSER.DAT
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 0 /f
          REG UNLOAD HKLM\Default

      - name: Setup Auto Apply Dark Theme on RDP Login
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null

          @'
          Start-Process "rundll32.exe" -ArgumentList 'themecpl.dll,OpenThemeAction C:\Windows\resources\Themes\dark.theme'
          '@ | Out-File -FilePath C:\Scripts\ApplyDarkTheme.ps1 -Encoding UTF8

          $Action  = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\ApplyDarkTheme.ps1"
          $Trigger = New-ScheduledTaskTrigger -AtLogOn
          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "ApplyDarkTheme" -User "Matrix" -Force

      - name: Setup Auto Wallpaper on RDP Login
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null

          # Tulis script baris demi baris biar YAML gak error
          Set-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '$ErrorActionPreference = "Stop"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value 'try {'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    $artifactUrl = "https://gitlab.com/Shahzaib-YT/enigmano-windows-11-with-sound/-/raw/main/EnigMano.jpg"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    $themeDir    = "$env:APPDATA\Microsoft\Windows\Themes"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    $localPath   = Join-Path $themeDir "EnigMano.jpg"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    New-Item -Path $themeDir -ItemType Directory -Force | Out-Null'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    if (Test-Path $localPath) { Remove-Item $localPath -Force }'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Invoke-WebRequest -Uri $artifactUrl -OutFile $localPath -UseBasicParsing'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value ''
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Add-Type @"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        using System.Runtime.InteropServices;'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        public class EnigManoVisual {'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '            [DllImport("user32.dll", SetLastError = true)]'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '            public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        }'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '"@'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value ''
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $localPath'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name WallpaperStyle -Value 10'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name TileWallpaper -Value 0'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    [EnigManoVisual]::SystemParametersInfo(0x0014, 0, $localPath, 0x0001 -bor 0x0002) | Out-Null'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '}'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value 'catch {'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Write-Error "Wallpaper setup failed: $_"'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    exit 1'
          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '}'

          # Register Scheduled Task
          $Action  = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\SetWallpaper.ps1"
          $Trigger = New-ScheduledTaskTrigger -AtLogOn
          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "SetWallpaper" -User "Matrix" -Force


      - name: Keep session alive
        run: |
          ping -t 127.0.0.1 >nul
