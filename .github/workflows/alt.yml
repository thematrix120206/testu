name: Windows 2025 RDP Setup

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2025

    steps:
      - name: Create user Matrix
        run: |
          net user Matrix Matrix#1234 /add
          net localgroup "Administrators" Matrix /add

      - name: Set Taskbar Left + Dark Theme Defaults
        run: |
          REG LOAD HKLM\Default C:\Users\Default\NTUSER.DAT
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 0 /f
          REG UNLOAD HKLM\Default

      - name: Setup Auto Apply Dark Theme on RDP Login
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null

          @'
          Start-Process "rundll32.exe" -ArgumentList 'themecpl.dll,OpenThemeAction C:\Windows\resources\Themes\dark.theme'
          '@ | Out-File -FilePath C:\Scripts\ApplyDarkTheme.ps1 -Encoding UTF8

          $Action  = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\ApplyDarkTheme.ps1"
          $Trigger = New-ScheduledTaskTrigger -AtLogOn
          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "ApplyDarkTheme" -User "Matrix" -Force

      - name: Setup Auto Wallpaper on RDP Login
        shell: pwsh
        run: |
          $script = @"
      - name: Setup Auto Wallpaper on RDP Login
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null

          $script = @"
          $ErrorActionPreference = "Stop"
          try {
              [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

              $artifactUrl = "https://gitlab.com/Shahzaib-YT/enigmano-windows-11-with-sound/-/raw/main/EnigMano.jpg"
              $themeDir    = "$env:APPDATA\Microsoft\Windows\Themes"
              $localPath   = Join-Path $themeDir "EnigMano.jpg"

              New-Item -Path $themeDir -ItemType Directory -Force | Out-Null
              if (Test-Path $localPath) { Remove-Item $localPath -Force }
              Invoke-WebRequest -Uri $artifactUrl -OutFile $localPath -UseBasicParsing

              Add-Type @"
                  using System.Runtime.InteropServices;
                  public class EnigManoVisual {
                      [DllImport("user32.dll", SetLastError = true)]
                      public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
                  }
  "@
              Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $localPath
  Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name WallpaperStyle -Value 10
  Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name TileWallpaper -Value 0
  [EnigManoVisual]::SystemParametersInfo(0x0014, 0, $localPath, 0x0001 -bor 0x0002) | Out-Null
  }
  catch {
Write-Error "Wallpaper setup failed: $_"
  exit 1
}
  "@

          $script | Set-Content -Path C:\Scripts\SetWallpaper.ps1 -Encoding UTF8

          $Action  = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\SetWallpaper.ps1"
  $Trigger = New-ScheduledTaskTrigger -AtLogOn
  Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "SetWallpaper" -User "Matrix" -Force


      - name: Keep session alive
        run: |
          ping -t 127.0.0.1 >nul
